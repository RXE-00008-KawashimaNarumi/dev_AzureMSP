name: "950_サービスアラート設定"
run-name: "950_create_service_health_alert"
on:
    workflow_call:
        secrets:
            ARM_CLIENT_ID:
                required: true
            ARM_CLIENT_SECRET:
                required: true
            ARM_SUBSCRIPTION_ID:
                required: true
            ARM_TENANT_ID:
                required: true
        inputs:
            ENVIRONMENT:
                description: "環境名"
                type: "string"
                required: true
jobs:
    terraform:
        name: 'Terraform'
        env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            TF_WORK_DIR: "950_create_service_health_alert"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: 'Setup Terraform CLI'
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: 1.7.0
            - name: 'Terraform init'
              run: terraform init -backend-config=key=${{ env.TF_WORK_DIR }}.tfstate
              working-directory: terraform/azure/environments/${{ github.event.inputs.ENVIRONMENT }}/${{ env.TF_WORK_DIR }}
            - name: 'Terraform plan'
              run: terraform plan -lock=false --var-file=./terraform.tfvars
              working-directory: terraform/azure/environments/${{ github.event.inputs.ENVIRONMENT }}/${{ env.TF_WORK_DIR }}
            - name: 'Terraform apply'
              run: terraform apply -auto-approve -lock=false
              working-directory: terraform/azure/environments/${{ github.event.inputs.ENVIRONMENT }}/${{ env.TF_WORK_DIR }}